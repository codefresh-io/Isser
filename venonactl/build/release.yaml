version: '1.0'
mode: parallel
stages:
- Build & Test
- Release
steps:

  main_clone:
    title: Clone repository
    type: git-clone
    repo: https://github.com/codefresh-io/venona
    revision: ${{CF_PULL_REQUEST_TARGET}}
    credentials:
      username: github
      password: ${{secrets.hybrid.git}}
    when:
      condition:
        all:
          pullRequestTargetMaster: '"${{CF_PULL_REQUEST_TARGET}}" == "release-1.0"'
          pullRequestMerged: '"${{CF_PULL_REQUEST_MERGED}}" == "true"'

  export_version:
    title: Compare version to venona
    stage: Build & Test
    image: codefresh/semver
    commands:
    - export VENONACTL_VERSION=$(cat ./venonactl/VERSION)
    - export VENONA_VERSION=$(cat ./venona/VERSION)
    - echo "Venona version -> $VENONA_VERSION ---- Venonactl version -> $VENONACTL_VERSION"
    - semver-cli equal $VENONACTL_VERSION $VENONA_VERSION
    - cf_export VERSION=$VENONACTL_VERSION
    when:
      steps:
      - name: main_clone
        on:
        - success 
          
  create_git_tag:
    title: Push tag to git
    image: codefresh/cli
    stage: Release
    commands:
    - export OLD_ORIGIN=$(git remote get-url origin)
    - git remote rm origin
    - git remote add origin https://${{GITHUB_TOKEN}}@github.com/codefresh-io/venona.git
    - git tag ${{VERSION}}
    - git push --tags
    - git remote rm origin
    - git remote add origin $OLD_ORIGIN
    
    fail_fast: false
    when:
      steps:
      - name: export_version
      - name: main_clone
  
  release_binaries:
    title: Create release in Github with venona CLI
    image: goreleaser/goreleaser:v0.124.1
    stage: Release
    fail_fast: false
    commands:
    - cd venonactl
    - goreleaser release -f .goreleaser.yml --rm-dist --skip-validate # pre-release
    when:
      steps:
      - name: create_git_tag
        on:
        - finished


  build_cli_image:
    title: "Building venona cli image"
    type: build
    stage: Build & Test
    tag: ${{CF_BRANCH_TAG_NORMALIZED}}
    working_directory: ${{main_clone}}/venonactl
    image_name: codefresh/venonacli
    when:
      steps:
      - name: release_binaries
        on:
        - success

  push_cli_image:
    stage: Release
    type: push
    candidate: ${{build_cli_image}}
    tags:
      - latest
      - ${{VERSION}}
    when:
      steps:
        - name: build_cli_image
          on:
          - success
    scale:
      push_to_dockerhub:
        title: "Push image with venona cli to dockerhub"
        registry: dockerhub
      push_to_quay:
        title: "Push image with venona cli to quay"
        registry: cf-quay
