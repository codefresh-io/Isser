version: '1.0'

stages:
- Test
- Notification

steps:

  create_namespace:
    stage: Notification
    title: 'Create namespace in Kuberentes'
    image: codefresh/kube-helm
    commands:
    - kubectl config set-context $KUEB_CONTEXT
    - kubectl create namespace $KUBE_NAMESPACE

  install_agent:
    stage: Notification
    title: 'Install agent'
    image: codefresh/cli
    commands:
    # Install agent, runtime and attach it
    - codefresh install agent --name $AGENT_NAME --kube-namespace $KUBE_NAMESPACE --install-runtime --kube-context-name $KUEB_CONTEXT --kube-config-path $KUBECONFIG
    - codefresh run $TEST_PIPELINE_ID

  uninstall_agent:
    stage: Notification
    title: 'Uninstall agent'
    image: codefresh/cli
    commands:
    # Uninstall agent, runtime
    - codefresh uninstall agent --name $AGENT_NAME --kube-namespace $KUBE_NAMESPACE
    - codefresh uninstall runtime --runtime-name $KUEB_CONTEXT/$KUBE_NAMESPACE --kube-namespace $KUBE_NAMESPACE --kube-context-name $KUEB_CONTEXT --kube-config-path $KUBECONFIG
    - echo "removed"

  delete_namespace:
    stage: Notification
    title: 'Create namespace in Kuberentes'
    image: codefresh/kube-helm
    commands:
    - kubectl delete namespace $KUBE_NAMESPACE

    when:
      steps:
      - name: create_namespace
        on:
        - success

  reported_failure:
    stage: Notification
    title: Report failure to Slack
    type: slack-message-sender
    arguments:
      WEBHOOK_URL: $SLACK_WEBHOOK_URL
      MESSAGE: "Venona installation failed, link: $CF_BUILD_URL"
    when:
      steps:
        any:
        - name: create_namespace
          on:
          - failure
        - name: create_namespace
          on:
          - failure
        - name: delete_namespace
          on:
          - failure
        - name: uninstall_agent
          on:
          - failure

